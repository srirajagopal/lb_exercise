# We are going to create a setup to demonstrate Autoscaling via an Application load balancer in AWS
# Use boto3 to create the relevant componets
# Tag each of the AWS resources created with a value of Coolscale so that we can find them later
# As you create each of the resources outlined - print out the details about the resource in a pretty printed manner
# Use the default region of what is configured in aws credentials (~/.aws/credentials)
# Create a VPC named "coolscale"
# Create necessary subnet and route table to allow EC2 instances in the subnet to reach the internet via internet vpc gateway. Name each of those elements coolscale-subnet, coolscale-rt and coolscale-igw. 
# The security group should also be named coolscale-sg and should only allow inbound SSH traffic from the public internet. 
# Create a coolscale-keypair pem file for use in EC2 later on. Save the pem file in the local directory
# S3: Create an S3 instance in the same region.  Name the instance coolscale-s3
# The s3 instance needs to be mounted into EC2 instances later on via s3fs. 
# Auto Scaling: Create an Auto scale group which spans Availability zons in the region. Create the necessary target groups which will hold EC2 instances. i
# EC2: Create one EC2 instance in the target group. The min scaling limit for the Auto scale group should be 1. The mex should be 2.  Attach the security group to the EC2 instance. In the user_data of the EC2 instance 
# Create a launch template for use with the load balancer and Auto scale group. 
# Create a load balncer. Make it an ALB as we will be passing traffic to the HTTP/HTTPS traffic to the EC2 instance in the target group attached to the load balancer. 


Ensure that during bring up of the resources in @create_lb.py  - we wait appropriately and check whether the resource has been successfully created before proceeding to the next resource. Ensure that we have reasonable message printed while waiting and upon successful creation or during error in the creation process to help with debugging. 



  - check first if resource already exists - if it does - do not recreate it - but use it and move to the next resource. The resource will have the name prefixed with coolscale
